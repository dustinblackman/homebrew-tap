# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class LanguagetoolCodeComments < Formula
  desc "Integrates the LanguageTool API to parse, spell check, and correct the grammar of your code comments!"
  homepage "https://github.com/dustinblackman/languagetool-code-comments"
  version "0.6.3"

  on_macos do
    if Hardware::CPU.arm?
      url "https://github.com/dustinblackman/languagetool-code-comments/releases/download/v0.6.3/languagetool-code-comments_0.6.3_darwin_arm64.tar.gz"
      sha256 "627b0e3a89cef2f584f47e7a8240285347590c609b0c8f49ef1c3d2963393d61"

      def install
        # Install languagetool-code-comments
        bin.install "languagetool-code-comments"

        # Install shell completions
        output = Utils.safe_popen_read("#{bin}/languagetool-code-comments", "completion", "-s", "bash")
        (bash_completion/"languagetool-code-comments").write output

        output = Utils.safe_popen_read("#{bin}/languagetool-code-comments", "completion", "-s", "zsh")
        (zsh_completion/"_languagetool-code-comments").write output

        output = Utils.safe_popen_read("#{bin}/languagetool-code-comments", "completion", "-s", "fish")
        (fish_completion/"languagetool-code-comments.fish").write output
      end
    end
    if Hardware::CPU.intel?
      url "https://github.com/dustinblackman/languagetool-code-comments/releases/download/v0.6.3/languagetool-code-comments_0.6.3_darwin_amd64.tar.gz"
      sha256 "3d9376f8b69b318ebfa15b5df199f9246221c14f4f0c9c226e20f0482f70579a"

      def install
        # Install languagetool-code-comments
        bin.install "languagetool-code-comments"

        # Install shell completions
        output = Utils.safe_popen_read("#{bin}/languagetool-code-comments", "completion", "-s", "bash")
        (bash_completion/"languagetool-code-comments").write output

        output = Utils.safe_popen_read("#{bin}/languagetool-code-comments", "completion", "-s", "zsh")
        (zsh_completion/"_languagetool-code-comments").write output

        output = Utils.safe_popen_read("#{bin}/languagetool-code-comments", "completion", "-s", "fish")
        (fish_completion/"languagetool-code-comments.fish").write output
      end
    end
  end

  on_linux do
    if Hardware::CPU.intel?
      url "https://github.com/dustinblackman/languagetool-code-comments/releases/download/v0.6.3/languagetool-code-comments_0.6.3_linux_amd64.tar.gz"
      sha256 "d90cc89b36774b0b9f58cfc9e84eafdd667167525096391cdf944402ba819b64"

      def install
        # Install languagetool-code-comments
        bin.install "languagetool-code-comments"

        # Install shell completions
        output = Utils.safe_popen_read("#{bin}/languagetool-code-comments", "completion", "-s", "bash")
        (bash_completion/"languagetool-code-comments").write output

        output = Utils.safe_popen_read("#{bin}/languagetool-code-comments", "completion", "-s", "zsh")
        (zsh_completion/"_languagetool-code-comments").write output

        output = Utils.safe_popen_read("#{bin}/languagetool-code-comments", "completion", "-s", "fish")
        (fish_completion/"languagetool-code-comments.fish").write output
      end
    end
    if Hardware::CPU.arm? && Hardware::CPU.is_64_bit?
      url "https://github.com/dustinblackman/languagetool-code-comments/releases/download/v0.6.3/languagetool-code-comments_0.6.3_linux_arm64.tar.gz"
      sha256 "bfd68a2e8c1dcca07cb57ead8fe6ca10f783c41497af9acddc18a0abe7bc37ae"

      def install
        # Install languagetool-code-comments
        bin.install "languagetool-code-comments"

        # Install shell completions
        output = Utils.safe_popen_read("#{bin}/languagetool-code-comments", "completion", "-s", "bash")
        (bash_completion/"languagetool-code-comments").write output

        output = Utils.safe_popen_read("#{bin}/languagetool-code-comments", "completion", "-s", "zsh")
        (zsh_completion/"_languagetool-code-comments").write output

        output = Utils.safe_popen_read("#{bin}/languagetool-code-comments", "completion", "-s", "fish")
        (fish_completion/"languagetool-code-comments.fish").write output
      end
    end
  end

  test do
    system "#{bin}/languagetool-code-comments --version"
  end
end
