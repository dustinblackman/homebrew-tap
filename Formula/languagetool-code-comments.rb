# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class LanguagetoolCodeComments < Formula
  desc "Integrates the LanguageTool API to parse, spell check, and correct the grammar of your code comments!"
  homepage "https://github.com/dustinblackman/languagetool-code-comments"
  version "0.6.1"

  on_macos do
    if Hardware::CPU.arm?
      url "https://github.com/dustinblackman/languagetool-code-comments/releases/download/v0.6.1/languagetool-code-comments_0.6.1_darwin_arm64.tar.gz"
      sha256 "e7f6d32ff40d889e09818460f3f8562671a2a215124ea4dd949de4b7e8a4820b"

      def install
        # Install languagetool-code-comments
        bin.install "languagetool-code-comments"

        # Install shell completions
        output = Utils.safe_popen_read("#{bin}/languagetool-code-comments", "completion", "-s", "bash")
        (bash_completion/"languagetool-code-comments").write output

        output = Utils.safe_popen_read("#{bin}/languagetool-code-comments", "completion", "-s", "zsh")
        (zsh_completion/"_languagetool-code-comments").write output

        output = Utils.safe_popen_read("#{bin}/languagetool-code-comments", "completion", "-s", "fish")
        (fish_completion/"languagetool-code-comments.fish").write output
      end
    end
    if Hardware::CPU.intel?
      url "https://github.com/dustinblackman/languagetool-code-comments/releases/download/v0.6.1/languagetool-code-comments_0.6.1_darwin_amd64.tar.gz"
      sha256 "d8abbbbe530d782d51a5c6a6b100ec32d2e9e9985a1ff3914985fa3b4dd83125"

      def install
        # Install languagetool-code-comments
        bin.install "languagetool-code-comments"

        # Install shell completions
        output = Utils.safe_popen_read("#{bin}/languagetool-code-comments", "completion", "-s", "bash")
        (bash_completion/"languagetool-code-comments").write output

        output = Utils.safe_popen_read("#{bin}/languagetool-code-comments", "completion", "-s", "zsh")
        (zsh_completion/"_languagetool-code-comments").write output

        output = Utils.safe_popen_read("#{bin}/languagetool-code-comments", "completion", "-s", "fish")
        (fish_completion/"languagetool-code-comments.fish").write output
      end
    end
  end

  on_linux do
    if Hardware::CPU.intel?
      url "https://github.com/dustinblackman/languagetool-code-comments/releases/download/v0.6.1/languagetool-code-comments_0.6.1_linux_amd64.tar.gz"
      sha256 "7d36f0f236ea13993ba39b9e9d5d1b18b3cf8a8e37292d30d4b13f1673c868f2"

      def install
        # Install languagetool-code-comments
        bin.install "languagetool-code-comments"

        # Install shell completions
        output = Utils.safe_popen_read("#{bin}/languagetool-code-comments", "completion", "-s", "bash")
        (bash_completion/"languagetool-code-comments").write output

        output = Utils.safe_popen_read("#{bin}/languagetool-code-comments", "completion", "-s", "zsh")
        (zsh_completion/"_languagetool-code-comments").write output

        output = Utils.safe_popen_read("#{bin}/languagetool-code-comments", "completion", "-s", "fish")
        (fish_completion/"languagetool-code-comments.fish").write output
      end
    end
    if Hardware::CPU.arm? && Hardware::CPU.is_64_bit?
      url "https://github.com/dustinblackman/languagetool-code-comments/releases/download/v0.6.1/languagetool-code-comments_0.6.1_linux_arm64.tar.gz"
      sha256 "8921f1bdeefe457edd6811d1853805f4dd06186d71d1ac8554934b0bd17e6503"

      def install
        # Install languagetool-code-comments
        bin.install "languagetool-code-comments"

        # Install shell completions
        output = Utils.safe_popen_read("#{bin}/languagetool-code-comments", "completion", "-s", "bash")
        (bash_completion/"languagetool-code-comments").write output

        output = Utils.safe_popen_read("#{bin}/languagetool-code-comments", "completion", "-s", "zsh")
        (zsh_completion/"_languagetool-code-comments").write output

        output = Utils.safe_popen_read("#{bin}/languagetool-code-comments", "completion", "-s", "fish")
        (fish_completion/"languagetool-code-comments.fish").write output
      end
    end
  end

  test do
    system "#{bin}/languagetool-code-comments --version"
  end
end
