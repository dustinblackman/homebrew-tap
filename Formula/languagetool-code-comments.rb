# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class LanguagetoolCodeComments < Formula
  desc "Integrates the LanguageTool API to parse, spell check, and correct the grammar of your code comments!"
  homepage "https://github.com/dustinblackman/languagetool-code-comments"
  version "0.5.0"

  on_macos do
    if Hardware::CPU.arm?
      url "https://github.com/dustinblackman/languagetool-code-comments/releases/download/v0.5.0/languagetool-code-comments_0.5.0_darwin_arm64.tar.gz"
      sha256 "99caaab539e89ae219c1ca7c94489150c71f9c580da1794d984c98cb15655b25"

      def install
        # Install languagetool-code-comments
        bin.install "languagetool-code-comments"

        # Install shell completions
        output = Utils.safe_popen_read("#{bin}/languagetool-code-comments", "completion", "-s", "bash")
        (bash_completion/"languagetool-code-comments").write output

        output = Utils.safe_popen_read("#{bin}/languagetool-code-comments", "completion", "-s", "zsh")
        (zsh_completion/"_languagetool-code-comments").write output

        output = Utils.safe_popen_read("#{bin}/languagetool-code-comments", "completion", "-s", "fish")
        (fish_completion/"languagetool-code-comments.fish").write output
      end
    end
    if Hardware::CPU.intel?
      url "https://github.com/dustinblackman/languagetool-code-comments/releases/download/v0.5.0/languagetool-code-comments_0.5.0_darwin_amd64.tar.gz"
      sha256 "ad81e3f5d1f177dcf591cefc4bd16473fc96d5966764d37af9b8953ca998ac2b"

      def install
        # Install languagetool-code-comments
        bin.install "languagetool-code-comments"

        # Install shell completions
        output = Utils.safe_popen_read("#{bin}/languagetool-code-comments", "completion", "-s", "bash")
        (bash_completion/"languagetool-code-comments").write output

        output = Utils.safe_popen_read("#{bin}/languagetool-code-comments", "completion", "-s", "zsh")
        (zsh_completion/"_languagetool-code-comments").write output

        output = Utils.safe_popen_read("#{bin}/languagetool-code-comments", "completion", "-s", "fish")
        (fish_completion/"languagetool-code-comments.fish").write output
      end
    end
  end

  on_linux do
    if Hardware::CPU.intel?
      url "https://github.com/dustinblackman/languagetool-code-comments/releases/download/v0.5.0/languagetool-code-comments_0.5.0_linux_amd64.tar.gz"
      sha256 "1b0192937bcb75caa660b73fa8a969b305d1d589246a302027a5bc236e3a8e03"

      def install
        # Install languagetool-code-comments
        bin.install "languagetool-code-comments"

        # Install shell completions
        output = Utils.safe_popen_read("#{bin}/languagetool-code-comments", "completion", "-s", "bash")
        (bash_completion/"languagetool-code-comments").write output

        output = Utils.safe_popen_read("#{bin}/languagetool-code-comments", "completion", "-s", "zsh")
        (zsh_completion/"_languagetool-code-comments").write output

        output = Utils.safe_popen_read("#{bin}/languagetool-code-comments", "completion", "-s", "fish")
        (fish_completion/"languagetool-code-comments.fish").write output
      end
    end
    if Hardware::CPU.arm? && Hardware::CPU.is_64_bit?
      url "https://github.com/dustinblackman/languagetool-code-comments/releases/download/v0.5.0/languagetool-code-comments_0.5.0_linux_arm64.tar.gz"
      sha256 "0232f432af0115265db94a01dd6c1f3c1b0555a37dfca18a3749cbc2242a645e"

      def install
        # Install languagetool-code-comments
        bin.install "languagetool-code-comments"

        # Install shell completions
        output = Utils.safe_popen_read("#{bin}/languagetool-code-comments", "completion", "-s", "bash")
        (bash_completion/"languagetool-code-comments").write output

        output = Utils.safe_popen_read("#{bin}/languagetool-code-comments", "completion", "-s", "zsh")
        (zsh_completion/"_languagetool-code-comments").write output

        output = Utils.safe_popen_read("#{bin}/languagetool-code-comments", "completion", "-s", "fish")
        (fish_completion/"languagetool-code-comments.fish").write output
      end
    end
  end

  test do
    system "#{bin}/languagetool-code-comments --version"
  end
end
