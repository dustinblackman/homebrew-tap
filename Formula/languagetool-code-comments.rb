# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class LanguagetoolCodeComments < Formula
  desc "Integrates the LanguageTool API to parse, spell check, and correct the grammar of your code comments!"
  homepage "https://github.com/dustinblackman/languagetool-code-comments"
  version "0.6.0"

  on_macos do
    if Hardware::CPU.arm?
      url "https://github.com/dustinblackman/languagetool-code-comments/releases/download/v0.6.0/languagetool-code-comments_0.6.0_darwin_arm64.tar.gz"
      sha256 "ca43ddd622a446427e681b2b394b8f4ba5f2d34b1e3b9721e3a095784270d05e"

      def install
        # Install languagetool-code-comments
        bin.install "languagetool-code-comments"

        # Install shell completions
        output = Utils.safe_popen_read("#{bin}/languagetool-code-comments", "completion", "-s", "bash")
        (bash_completion/"languagetool-code-comments").write output

        output = Utils.safe_popen_read("#{bin}/languagetool-code-comments", "completion", "-s", "zsh")
        (zsh_completion/"_languagetool-code-comments").write output

        output = Utils.safe_popen_read("#{bin}/languagetool-code-comments", "completion", "-s", "fish")
        (fish_completion/"languagetool-code-comments.fish").write output
      end
    end
    if Hardware::CPU.intel?
      url "https://github.com/dustinblackman/languagetool-code-comments/releases/download/v0.6.0/languagetool-code-comments_0.6.0_darwin_amd64.tar.gz"
      sha256 "e29aebb336161297acbb24370e45845bc6ec84c2cf16e955ab1eddc8b719da62"

      def install
        # Install languagetool-code-comments
        bin.install "languagetool-code-comments"

        # Install shell completions
        output = Utils.safe_popen_read("#{bin}/languagetool-code-comments", "completion", "-s", "bash")
        (bash_completion/"languagetool-code-comments").write output

        output = Utils.safe_popen_read("#{bin}/languagetool-code-comments", "completion", "-s", "zsh")
        (zsh_completion/"_languagetool-code-comments").write output

        output = Utils.safe_popen_read("#{bin}/languagetool-code-comments", "completion", "-s", "fish")
        (fish_completion/"languagetool-code-comments.fish").write output
      end
    end
  end

  on_linux do
    if Hardware::CPU.intel?
      url "https://github.com/dustinblackman/languagetool-code-comments/releases/download/v0.6.0/languagetool-code-comments_0.6.0_linux_amd64.tar.gz"
      sha256 "24abf8e795cc99fff191f0eb503bb07c6ab8a82f58ddf1e5354c2c1e0ac8832a"

      def install
        # Install languagetool-code-comments
        bin.install "languagetool-code-comments"

        # Install shell completions
        output = Utils.safe_popen_read("#{bin}/languagetool-code-comments", "completion", "-s", "bash")
        (bash_completion/"languagetool-code-comments").write output

        output = Utils.safe_popen_read("#{bin}/languagetool-code-comments", "completion", "-s", "zsh")
        (zsh_completion/"_languagetool-code-comments").write output

        output = Utils.safe_popen_read("#{bin}/languagetool-code-comments", "completion", "-s", "fish")
        (fish_completion/"languagetool-code-comments.fish").write output
      end
    end
    if Hardware::CPU.arm? && Hardware::CPU.is_64_bit?
      url "https://github.com/dustinblackman/languagetool-code-comments/releases/download/v0.6.0/languagetool-code-comments_0.6.0_linux_arm64.tar.gz"
      sha256 "7bad3006804daf683159587b0721be7037627b37056bf1c9ed5596d05fd27e3b"

      def install
        # Install languagetool-code-comments
        bin.install "languagetool-code-comments"

        # Install shell completions
        output = Utils.safe_popen_read("#{bin}/languagetool-code-comments", "completion", "-s", "bash")
        (bash_completion/"languagetool-code-comments").write output

        output = Utils.safe_popen_read("#{bin}/languagetool-code-comments", "completion", "-s", "zsh")
        (zsh_completion/"_languagetool-code-comments").write output

        output = Utils.safe_popen_read("#{bin}/languagetool-code-comments", "completion", "-s", "fish")
        (fish_completion/"languagetool-code-comments.fish").write output
      end
    end
  end

  test do
    system "#{bin}/languagetool-code-comments --version"
  end
end
