# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class LanguagetoolCodeComments < Formula
  desc "Integrates the LanguageTool API to parse, spell check, and correct the grammar of your code comments!"
  homepage "https://github.com/dustinblackman/languagetool-code-comments"
  version "0.4.2"

  on_macos do
    if Hardware::CPU.arm?
      url "https://github.com/dustinblackman/languagetool-code-comments/releases/download/v0.4.2/languagetool-code-comments_0.4.2_darwin_arm64.tar.gz"
      sha256 "6f31dbb9c1efea06e2d09a337d16a7aa5fca761ab3acd2538d1b76de7c850acb"

      def install
        # Install languagetool-code-comments
        bin.install "languagetool-code-comments"

        # Install shell completions
        output = Utils.safe_popen_read("#{bin}/languagetool-code-comments", "completion", "-s", "bash")
        (bash_completion/"languagetool-code-comments").write output

        output = Utils.safe_popen_read("#{bin}/languagetool-code-comments", "completion", "-s", "zsh")
        (zsh_completion/"_languagetool-code-comments").write output

        output = Utils.safe_popen_read("#{bin}/languagetool-code-comments", "completion", "-s", "fish")
        (fish_completion/"languagetool-code-comments.fish").write output
      end
    end
    if Hardware::CPU.intel?
      url "https://github.com/dustinblackman/languagetool-code-comments/releases/download/v0.4.2/languagetool-code-comments_0.4.2_darwin_amd64.tar.gz"
      sha256 "e17c71ef1828d2c474abe5c190540d86ebcbe178f551153123a5f1e93f573eed"

      def install
        # Install languagetool-code-comments
        bin.install "languagetool-code-comments"

        # Install shell completions
        output = Utils.safe_popen_read("#{bin}/languagetool-code-comments", "completion", "-s", "bash")
        (bash_completion/"languagetool-code-comments").write output

        output = Utils.safe_popen_read("#{bin}/languagetool-code-comments", "completion", "-s", "zsh")
        (zsh_completion/"_languagetool-code-comments").write output

        output = Utils.safe_popen_read("#{bin}/languagetool-code-comments", "completion", "-s", "fish")
        (fish_completion/"languagetool-code-comments.fish").write output
      end
    end
  end

  on_linux do
    if Hardware::CPU.intel?
      url "https://github.com/dustinblackman/languagetool-code-comments/releases/download/v0.4.2/languagetool-code-comments_0.4.2_linux_amd64.tar.gz"
      sha256 "5569047d7faf7461fe79bca8328960bb221a9d5e3ebd489d846b982fec9de5a3"

      def install
        # Install languagetool-code-comments
        bin.install "languagetool-code-comments"

        # Install shell completions
        output = Utils.safe_popen_read("#{bin}/languagetool-code-comments", "completion", "-s", "bash")
        (bash_completion/"languagetool-code-comments").write output

        output = Utils.safe_popen_read("#{bin}/languagetool-code-comments", "completion", "-s", "zsh")
        (zsh_completion/"_languagetool-code-comments").write output

        output = Utils.safe_popen_read("#{bin}/languagetool-code-comments", "completion", "-s", "fish")
        (fish_completion/"languagetool-code-comments.fish").write output
      end
    end
    if Hardware::CPU.arm? && Hardware::CPU.is_64_bit?
      url "https://github.com/dustinblackman/languagetool-code-comments/releases/download/v0.4.2/languagetool-code-comments_0.4.2_linux_arm64.tar.gz"
      sha256 "2c5113e0bc7d33da833682d867ec25e95d753ab9bcb07a2be107b994c24a6478"

      def install
        # Install languagetool-code-comments
        bin.install "languagetool-code-comments"

        # Install shell completions
        output = Utils.safe_popen_read("#{bin}/languagetool-code-comments", "completion", "-s", "bash")
        (bash_completion/"languagetool-code-comments").write output

        output = Utils.safe_popen_read("#{bin}/languagetool-code-comments", "completion", "-s", "zsh")
        (zsh_completion/"_languagetool-code-comments").write output

        output = Utils.safe_popen_read("#{bin}/languagetool-code-comments", "completion", "-s", "fish")
        (fish_completion/"languagetool-code-comments.fish").write output
      end
    end
  end

  test do
    system "#{bin}/languagetool-code-comments --version"
  end
end
